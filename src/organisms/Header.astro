---
// library imports
import { Icon } from "astro-icon";

// component imports
import Link from "../atoms/Link.astro";
import Ad980 from "../molecules/Ad980.astro";
import TemplateDropdown from "../molecules/TemplateDropdown.astro";
import Darkmode from "../molecules/Darkmode.astro";

//
const navigationItems = ["Investor", "D2", "Smak", "Magasinet"];

export interface Props {
  theme: string;
}

const { theme } = Astro.props as Props;
---

<TemplateDropdown />
<Ad980 />

<header class="header">
  <div class="header-flow">
    <Link href="/" text="" classes="logo">
      <Icon name={theme} />
    </Link>
    <ul class="header-right">
      <!--     <li class="desktop-only"><span>4 uker for 380,-</span></li> -->
      <li><Darkmode publication={theme} /></li>
      <li class="desktop-only">
        <Link href="/" text="Abonner" classes="button" />
      </li>
      <li><Link href="/" text="Login" classes="tag" /></li>

      <li>
        <button>
          <Icon name="burger" width="36" />
        </button>
      </li>
    </ul>
  </div>
  <nav class="navigation">
    <div class="navigation-inner">
      <ul class="top-tasks">
        <!-- {
        navigationItems.map((item) =>
          <li>
            <Link href="#" text={item} />
          </li>
        )
      } -->

        <li><a href="#">Investor</a></li>
        <li class="divider">|</li>
        <li><a href="#">D2</a></li>
        <li class="divider">|</li>
        <li><a href="#">Smak</a></li>
        <li class="divider">|</li>
        <li><a href="#">Magasinet</a></li>
      </ul>
      <ul class="my-alerts">
        <li><a href="#">Mine sider</a></li>
      </ul>
    </div>
  </nav>
</header>
<style>
  header {
    background-color: var(--color-header-top-bg);
    font-family: var(--typography-utility-m-font-family);
  }

  a {
    font-size: 1.1rem;
    text-underline-offset: 0.4rem;
    color: var(--color-header-navigation-fg) !important;
  }

  .header-flow {
    align-items: center;
    block-size: var(--header-height);
    display: flex;
    inline-size: min(
      var(--page-width, 1280px),
      100vw - calc(var(--site-padding, 1rem) * 2)
    );
    justify-content: space-between;
    margin-inline: auto;
  }

  .header-right {
    display: flex;
    align-items: center;
  }

  .header-right li {
    margin-left: var(--row-gap);
  }

  .navigation {
    display: flex;
    align-items: center;
    min-height: 20px;
    overflow-x: scroll;
    background-color: var(--color-header-navigation-bg);

    @media only screen and (min-width: 768px) {
      overflow-x: hidden;
      margin-inline: auto;
    }
  }

  .navigation-inner {
    display: flex;
    align-items: center;
    justify-content: space-between;
    inline-size: min(
      var(--page-width),
      100vw - calc(var(--site-padding, 1rem) * 2)
    );
    margin: 0 auto;
    border-top: 1px solid;
    border-bottom: 1px solid;
    border-color: var(--color-header-navigation-divider);
    @media only screen and (min-width: 1280px) {
      padding-inline-start: 0;
      max-width: var(--page-width);
    }
  }

  .top-tasks {
    padding: 1rem 1rem 1rem 0;
    display: flex;

    justify-content: flex-start;
    @media only screen and (min-width: 1280px) {
      padding-inline-start: 0;
      max-width: var(--grid-width);
    }
  }

  .top-tasks li {
    margin-right: var(--row-gap);
    @media only screen and (min-width: 768px) {
      overflow-x: hidden;
    }
  }

  .my-alerts {
    display: flex;
    justify-content: flex-end;
    min-width: 200px;
    column-gap: 0.5rem;
    margin-right: 1rem;
    @media only screen and (min-width: 1280px) {
      margin-right: 0rem;
    }
  }

  a.logo {
    block-size: var(--logo-height);
    max-width: 300px;
  }

  svg {
    block-size: var(--logo-height);
    max-width: 200px;
    fill: var(--color-header-logo-primary) !important;
  }

  /* Demo purposes */
  nav {
    column-gap: 1rem;
    display: flex;
  }

  .navigation.on-scroll {
    position: fixed;
    width: 100%;
    background-color: var(--color-neutral-0);
    top: 0;
    z-index: 99;
  }
</style>

<script>
  // Theme by default loads a jQuery as dependency of the main script.
  // Let's include it using ES6 modules import.

  var mainHeader = document.querySelector(".navigation");

  window.addEventListener("scroll", function () {
    if (window.scrollY >= 500) {
      mainHeader.classList.add("on-scroll");
    } else if (window.scrollY <= 500) {
      mainHeader.classList.remove("on-scroll");
    }
  });
</script>
